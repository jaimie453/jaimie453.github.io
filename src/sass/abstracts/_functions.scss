// -----------------------------------------------------------------------------
// This file contains Sass functions.
// -----------------------------------------------------------------------------

@function generate-fibonacci-sequence($length) {
  $sequence: ();
  $i: 0;

  @while $i < $length {
    @if $i==0 {
      $sequence: append($sequence, 0);
    } @else if $i==1 or $i==2 {
      $sequence: append($sequence, 1);
    } @else {
      // sass is 1-indexed
      $value: nth($sequence, $i) + nth($sequence, $i - 1);
      $sequence: append($sequence, $value);
    }

    $i: $i+1;
  }

  @return $sequence;
}

// also works for em
@function convert-px-to-rem($px) {
  @return calc($px / 16);
}

// also works for em
@function convert-rem-to-px($rem) {
  @return $rem * 16;
}

/// Generates viewport step for the fluid sizing function
///   #{viewport-step}vw + #{relative-step}rem
///
/// @param {Number} $min-font-size - (px) text will never be smaller than this value
/// @param {Number} $max-font-size - (px) text will never be larger than this value
/// @param {Number} $min-viewport-width - (px) stop fluid sizing function below this viewport width
/// @param {Number} $max-viewport-width - (px) stop fluid sizing function above this viewport width
///
/// @return {Number} - viewport-step with 2 digits of precision

@function get-fluid-text-viewport-step($min-font-size, $max-font-size, $min-viewport-width, $max-viewport-width) {
  $font-size-difference: $max-font-size - $min-font-size;
  $viewport-difference: $max-viewport-width - $min-viewport-width;
  $step: calc((100 * $font-size-difference) / $viewport-difference);

  @return decimal-round($step, 2);
}

/// Generates relative step for the fluid sizing function
///   #{viewport-step}vw + #{relative-step}rem
///
/// @param {Number} $min-font-size - (px) text will never be smaller than this value
/// @param {Number} $max-font-size - (px) text will never be larger than this value
/// @param {Number} $min-viewport-width - (px) stop fluid sizing function below this viewport width
/// @param {Number} $max-viewport-width - (px) stop fluid sizing function above this viewport width
///
/// @return {Number} - relative-step in rem with 2 digits of precision

@function get-fluid-text-relative-step($min-font-size, $max-font-size, $min-viewport-width, $max-viewport-width) {
  $combined-difference: ($max-font-size * $min-viewport-width) - ($min-font-size * $max-viewport-width);
  $viewport-difference: $min-viewport-width - $max-viewport-width;
  $step: convert-px-to-rem(calc($combined-difference / $viewport-difference));

  @return decimal-round($step, 2);
}

/// Generates a fluid typography font size value using clamp()
///   clamp consists of 3 parts: a min font size, a max font size, and a fluid sizing function
///   https://www.smashingmagazine.com/2022/01/modern-fluid-typography-css-clamp/#calculating-preferred-value-parameters-based-on-specific-starting-and-ending-points
///
/// @param {Number} $min-font-size - (px) text will never be smaller than this value
/// @param {Number} $max-font-size - (px) text will never be larger than this value
/// @param {Number} $min-viewport-width - (px) stop fluid sizing function below this viewport width
/// @param {Number} $max-viewport-width - (px) stop fluid sizing function above this viewport width
///
/// @return {String}
///   returns clamp(#{min-font-size}rem, #{viewport-step}vw + #{relative-step}rem , #{max-font-size}rem)

@function get-fluid-text-size($min-font-size, $max-font-size, $min-viewport-width, $max-viewport-width) {
  $vw-step: get-fluid-text-viewport-step($min-font-size, $max-font-size, $min-viewport-width, $max-viewport-width);
  $r-step: get-fluid-text-relative-step($min-font-size, $max-font-size, $min-viewport-width, $max-viewport-width);
  $min: #{convert-px-to-rem($min-font-size)}rem;
  $max: #{convert-px-to-rem($max-font-size)}rem;

  @return clamp(#{$min}, #{$vw-step}vw + #{$r-step}rem, #{$max});
}

@function generate-font-size-range($font-size-start, $font-size-steps) {
  $font-size-range: ($font-size-start, );

  @for $i from 1 through length($font-size-steps) {
    $step: nth($font-size-steps, $i);
    $font-size: nth($font-size-range, $i) + $step;
    $font-size-range: append($font-size-range, $font-size);
  }

  @return $font-size-range;
}

@function generate-fluid-font-sizes($font-size-range) {
  $fluid-font-sizes: ();

  // todo: change to input parameters
  $min-viewport-width: 610;
  $max-viewport-width: 1597;

  @for $i from 1 through length($font-size-range) - 1 {
    $min-font-size: nth($font-size-range, $i);
    $max-font-size: nth($font-size-range, $i + 1);

    $fluid-font-size: get-fluid-text-size($min-font-size, $max-font-size, $min-viewport-width, $max-viewport-width);
    $fluid-font-sizes: append($fluid-font-sizes, $fluid-font-size);
  }

  @return $fluid-font-sizes;
}